{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart/chart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\nimport Axis from './axis.js';\nimport Grid from './grid.js';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uuid = `_${uuidv1()}`;\n  }\n\n  render() {\n    const {\n      timeseriesData,\n      measuresData,\n      height,\n      width,\n      onClick\n    } = this.props; // Margins.\n\n    const marginTop = 10;\n    const marginRight = 25;\n    const marginBottom = 25;\n    const marginLeft = 50; // Find min & max values.\n\n    let minX = Math.min(d3.min(timeseriesData, function (d) {\n      return d.date;\n    }), d3.min(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let maxX = Math.max(d3.max(timeseriesData, function (d) {\n      return d.date;\n    }), d3.max(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let minY = d3.min(timeseriesData, function (d) {\n      return d.value;\n    });\n    let maxY = d3.max(timeseriesData, function (d) {\n      return d.value;\n    }); // Build X & Y scale.\n\n    const xScale = d3.scaleTime().domain([minX, maxX]).range([marginLeft, width - marginRight]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([height - marginBottom, marginTop]); // Set grid & axis props.\n\n    const xProps = {\n      orient: 'Bottom',\n      scale: xScale,\n      translate: `translate(0, ${height - marginBottom})`,\n      tickSize: height - marginTop - marginBottom\n    };\n    const yProps = {\n      orient: 'Left',\n      scale: yScale,\n      translate: `translate(${marginLeft}, 0)`,\n      tickSize: width - marginLeft - marginRight\n    };\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        height: `${height}px`,\n        width: `${width}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: this.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: marginLeft,\n      y: marginTop,\n      width: width - marginLeft - marginRight,\n      height: height - marginTop - marginBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      clipPath: `url(#${this.uuid})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      xScale: xScale,\n      yScale: yScale,\n      data: timeseriesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ImageChart, {\n      xScale: xScale,\n      data: measuresData,\n      height: height,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nfunction LineChart(props) {\n  // Get props.\n  const {\n    xScale,\n    yScale,\n    data\n  } = props; // Build line function.\n\n  var line = d3.line().x(function (d) {\n    return xScale(d.date);\n  }).y(function (d) {\n    return yScale(d.value);\n  });\n  var linePlot = line(data); // Plot.\n\n  return /*#__PURE__*/React.createElement(\"path\", {\n    className: \"line\",\n    d: linePlot,\n    style: {\n      fill: 'none',\n      strokeWidth: '1.5px',\n      stroke: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  });\n}\n\nclass ImageChart extends React.Component {\n  componentDidMount() {\n    this.renderPlot();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.renderPlot();\n  }\n\n  renderPlot() {\n    // Get props.\n    const xScale = this.props.xScale;\n    const height = this.props.height;\n    const data = this.props.data; // Bind to dom.\n\n    const imageElements = d3Select(this.imageElement).selectAll(\"text\").data(data, d => d.date_implemented);\n    imageElements.join(enter => enter.append(\"text\").on('click', (d, i) => this.props.onClick(d, i, this.props.index)).attr('font-family', 'FontAwesome').text(function (d) {\n      return '\\uf071';\n    }).attr('font-size', '16px').attr('fill', 'red').attr(\"transform\", function (d) {\n      return \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n    }), update => update.attr(\"transform\", function (d) {\n      return \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n    }), exit => exit.remove());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: \"image\",\n      ref: el => {\n        this.imageElement = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart/chart.js"],"names":["React","d3","select","d3Select","uuidv1","Axis","Grid","Chart","Component","constructor","props","uuid","render","timeseriesData","measuresData","height","width","onClick","marginTop","marginRight","marginBottom","marginLeft","minX","Math","min","d","date","date_implemented","maxX","max","minY","value","maxY","xScale","scaleTime","domain","range","yScale","scaleLinear","xProps","orient","scale","translate","tickSize","yProps","LineChart","data","line","x","y","linePlot","fill","strokeWidth","stroke","ImageChart","componentDidMount","renderPlot","componentDidUpdate","prevProps","prevState","imageElements","imageElement","selectAll","join","enter","append","on","i","index","attr","text","update","exit","remove","el"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\n\nimport Axis from './axis.js';\nimport Grid from './grid.js';\n\nclass Chart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = `_${uuidv1()}`;\n\t}\n\n\trender() {\n\t\tconst { timeseriesData, measuresData, height, width, onClick } = this.props;\n\t\t\n\t\t// Margins.\n\t\tconst marginTop = 10;\n\t\tconst marginRight = 25; \n\t\tconst marginBottom = 25; \n\t\tconst marginLeft = 50;\n\n\t\t// Find min & max values.\n\t\tlet minX = Math.min(d3.min(timeseriesData, function(d) { return d.date; }), d3.min(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet maxX = Math.max(d3.max(timeseriesData, function(d) { return d.date; }), d3.max(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet minY = d3.min(timeseriesData, function(d) { return d.value; });\n\t\tlet maxY = d3.max(timeseriesData, function(d) { return d.value; });\n\n\t\t// Build X & Y scale.\n\t\tconst xScale = d3.scaleTime()\n\t\t\t.domain([minX, maxX])\n\t\t\t.range([marginLeft, width - marginRight]);\n\n\t\tconst yScale = d3.scaleLinear()\n\t\t\t.domain([minY, maxY])\n\t\t\t.range([height - marginBottom, marginTop]);\n\n\t\t// Set grid & axis props.\n\t\tconst xProps = {\n\t\t\torient: 'Bottom',\n\t\t\tscale: xScale,\n\t\t\ttranslate: `translate(0, ${height - marginBottom})`,\n\t\t\ttickSize: height - marginTop - marginBottom,\n\t\t}\n\n\t\tconst yProps = {\n\t\t\torient: 'Left',\n\t\t\tscale: yScale,\n\t\t\ttranslate: `translate(${marginLeft}, 0)`,\n\t\t\ttickSize: width - marginLeft - marginRight,\n\t\t}\n\n\t\treturn (\n\t\t\t<svg style={{height:`${height}px`, width:`${width}px`}}>\n\t\t\t\t<defs>\n\t\t            <clipPath id={this.uuid}>\n\t\t                <rect x={marginLeft} y={marginTop} width={width - marginLeft - marginRight} height={height - marginTop - marginBottom}/>\n\t\t            </clipPath>\n\t\t        </defs>\n\t        \t<Grid {...yProps} color={\"#ddd\"} />\n\t\t\t\t<Grid {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...yProps} color={\"#ddd\"} />\n\t\t\t\t<g clipPath={`url(#${this.uuid})`}>\n\t\t\t\t\t<LineChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\tdata={timeseriesData}\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tdata={measuresData}\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nfunction LineChart(props) {\n\t// Get props.\n\tconst { xScale, yScale, data } = props;\n\n\t// Build line function.\n\tvar line = d3.line()\n\t\t.x(function(d) { return xScale(d.date); })\n\t\t.y(function(d) { return yScale(d.value); });\n\n\tvar linePlot = line(data);\n\n\t// Plot.\n\treturn (\n\t\t<path \n\t\t\tclassName=\"line\" \n\t\t\td={linePlot} \n\t\t\tstyle={{fill:'none', strokeWidth:'1.5px', stroke:\"red\"}}\n\t\t/>\n\t);\n}\n\nclass ImageChart extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.renderPlot();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.renderPlot();\n\t}\n\n\trenderPlot() {\n\t\t// Get props.\n\t\tconst xScale = this.props.xScale;\n\t\tconst height = this.props.height;\n\t\tconst data = this.props.data;\n\n\t\t// Bind to dom.\n\t\tconst imageElements = d3Select(this.imageElement)\n\t\t\t.selectAll(\"text\")\n\t\t\t.data(data, d => d.date_implemented);\n\n\t\timageElements.join(\n\t\t\tenter =>\n\t\t\t\tenter\n\t\t\t\t\t.append(\"text\")\n\t\t\t\t\t.on('click', (d, i) => this.props.onClick(d, i, this.props.index))\n\t\t\t\t\t.attr('font-family', 'FontAwesome')\n\t\t\t\t\t.text( function (d) { return '\\uf071'; })\n\t\t\t\t\t.attr('font-size', '16px')\n\t\t\t\t\t.attr('fill', 'red')\n\t\t\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\t\t\treturn \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n\t\t\t\t\t}),\n\t\t\tupdate =>\n\t\t\t\tupdate\n\t\t\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\t\t\treturn \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n\t\t\t\t\t}),\n\t\t\texit => \n\t\t\t\texit\n\t\t\t\t\t.remove()\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<g\n\t\t\t\tclassName='image'\n\t\t\t\tref={(el) => { this.imageElement = el; }}\n\t\t\t/>\n\t\t);\t\t\n\t}\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}