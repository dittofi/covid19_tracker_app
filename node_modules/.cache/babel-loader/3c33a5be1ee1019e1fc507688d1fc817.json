{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marginTop: 10,\n      marginRight: 25,\n      marginBottom: 25,\n      marignLeft: 50\n    };\n  }\n\n  componentDidUpdate() {\n    document.querySelectorAll(\".textpoint\").forEach(elem => {\n      console.log(elem);\n    });\n  }\n\n  render() {\n    const {\n      timeseriesData,\n      measuresData,\n      height,\n      width\n    } = this.props; // Margins.\n\n    const marginTop = 10;\n    const marginRight = 25;\n    const marginBottom = 25;\n    const marginLeft = 50; // Find min & max values.\n\n    let minX = Math.min(d3.min(timeseriesData, function (d) {\n      return d.date;\n    }), d3.min(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let maxX = Math.max(d3.max(timeseriesData, function (d) {\n      return d.date;\n    }), d3.max(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let minY = d3.min(timeseriesData, function (d) {\n      return d.value;\n    });\n    let maxY = d3.max(timeseriesData, function (d) {\n      return d.value;\n    }); // Build X & Y scale.\n\n    const xScale = d3.scaleTime().domain([minX, maxX]).range([marginLeft, width - marginRight]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([height - marginBottom, marginTop]);\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        height: `${height}px`,\n        width: `${width}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      xScale: xScale,\n      yScale: yScale,\n      data: timeseriesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nfunction LineChart(props) {\n  // Get props.\n  const {\n    xScale,\n    yScale,\n    data\n  } = props; // Build line function.\n\n  var line = d3.line().x(function (d) {\n    return xScale(d.date);\n  }).y(function (d) {\n    return yScale(d.value);\n  });\n  var linePlot = line(data); // Plot.\n\n  return /*#__PURE__*/React.createElement(\"path\", {\n    className: \"line\",\n    d: linePlot,\n    style: {\n      fill: 'none',\n      strokeWidth: '1.5px',\n      stroke: props.stroke\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  });\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart.js"],"names":["React","d3","Chart","Component","constructor","props","state","marginTop","marginRight","marginBottom","marignLeft","componentDidUpdate","document","querySelectorAll","forEach","elem","console","log","render","timeseriesData","measuresData","height","width","marginLeft","minX","Math","min","d","date","date_implemented","maxX","max","minY","value","maxY","xScale","scaleTime","domain","range","yScale","scaleLinear","LineChart","data","line","x","y","linePlot","fill","strokeWidth","stroke"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,WAAW,EAAC,EAFA;AAGZC,MAAAA,YAAY,EAAC,EAHD;AAIZC,MAAAA,UAAU,EAAE;AAJA,KAAb;AAMA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCC,OAAxC,CAAiDC,IAAD,IAAU;AACzDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,KAHD;AAIA;;AAEDG,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,YAAlB;AAAgCC,MAAAA,MAAhC;AAAwCC,MAAAA;AAAxC,QAAkD,KAAKjB,KAA7D,CADQ,CAGR;;AACA,UAAME,SAAS,GAAG,EAAlB;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMc,UAAU,GAAG,EAAnB,CAPQ,CASR;;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASzB,EAAE,CAACyB,GAAH,CAAOP,cAAP,EAAuB,UAASQ,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACC,IAAT;AAAgB,KAArD,CAAT,EAAiE3B,EAAE,CAACyB,GAAH,CAAON,YAAP,EAAqB,UAASO,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACE,gBAAT;AAA4B,KAA/D,CAAjE,CAAX;AACA,QAAIC,IAAI,GAAGL,IAAI,CAACM,GAAL,CAAS9B,EAAE,CAAC8B,GAAH,CAAOZ,cAAP,EAAuB,UAASQ,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACC,IAAT;AAAgB,KAArD,CAAT,EAAiE3B,EAAE,CAAC8B,GAAH,CAAOX,YAAP,EAAqB,UAASO,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACE,gBAAT;AAA4B,KAA/D,CAAjE,CAAX;AACA,QAAIG,IAAI,GAAG/B,EAAE,CAACyB,GAAH,CAAOP,cAAP,EAAuB,UAASQ,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACM,KAAT;AAAiB,KAAtD,CAAX;AACA,QAAIC,IAAI,GAAGjC,EAAE,CAAC8B,GAAH,CAAOZ,cAAP,EAAuB,UAASQ,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACM,KAAT;AAAiB,KAAtD,CAAX,CAbQ,CAeR;;AACA,UAAME,MAAM,GAAGlC,EAAE,CAACmC,SAAH,GACbC,MADa,CACN,CAACb,IAAD,EAAOM,IAAP,CADM,EAEbQ,KAFa,CAEP,CAACf,UAAD,EAAaD,KAAK,GAAGd,WAArB,CAFO,CAAf;AAIA,UAAM+B,MAAM,GAAGtC,EAAE,CAACuC,WAAH,GACbH,MADa,CACN,CAACL,IAAD,EAAOE,IAAP,CADM,EAEbI,KAFa,CAEP,CAACjB,MAAM,GAAGZ,YAAV,EAAwBF,SAAxB,CAFO,CAAf;AAIA,wBACC;AAAK,MAAA,KAAK,EAAE;AAACc,QAAAA,MAAM,EAAE,GAAEA,MAAO,IAAlB;AAAuBC,QAAAA,KAAK,EAAE,GAAEA,KAAM;AAAtC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AACC,MAAA,MAAM,EAAEa,MADT;AAEC,MAAA,MAAM,EAAEI,MAFT;AAGC,MAAA,IAAI,EAAEpB,cAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AASA;;AAnDkC;;AAwDpC,SAASsB,SAAT,CAAmBpC,KAAnB,EAA0B;AACzB;AACA,QAAM;AAAE8B,IAAAA,MAAF;AAAUI,IAAAA,MAAV;AAAkBG,IAAAA;AAAlB,MAA2BrC,KAAjC,CAFyB,CAIzB;;AACA,MAAIsC,IAAI,GAAG1C,EAAE,CAAC0C,IAAH,GACTC,CADS,CACP,UAASjB,CAAT,EAAY;AAAE,WAAOQ,MAAM,CAACR,CAAC,CAACC,IAAH,CAAb;AAAwB,GAD/B,EAETiB,CAFS,CAEP,UAASlB,CAAT,EAAY;AAAE,WAAOY,MAAM,CAACZ,CAAC,CAACM,KAAH,CAAb;AAAyB,GAFhC,CAAX;AAIA,MAAIa,QAAQ,GAAGH,IAAI,CAACD,IAAD,CAAnB,CATyB,CAWzB;;AACA,sBACC;AACC,IAAA,SAAS,EAAC,MADX;AAEC,IAAA,CAAC,EAAEI,QAFJ;AAGC,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAC,MAAN;AAAcC,MAAAA,WAAW,EAAC,OAA1B;AAAmCC,MAAAA,MAAM,EAAC5C,KAAK,CAAC4C;AAAhD,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAOA;;AAED,eAAe/C,KAAf","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nclass Chart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmarginTop: 10, \n\t\t\tmarginRight:25,  \n\t\t\tmarginBottom:25, \n\t\t\tmarignLeft: 50\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdocument.querySelectorAll(\".textpoint\").forEach((elem) => {\n\t\t\tconsole.log(elem);\n\t\t\t\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { timeseriesData, measuresData, height, width } = this.props;\n\t\t\n\t\t// Margins.\n\t\tconst marginTop = 10;\n\t\tconst marginRight = 25; \n\t\tconst marginBottom = 25; \n\t\tconst marginLeft = 50;\n\n\t\t// Find min & max values.\n\t\tlet minX = Math.min(d3.min(timeseriesData, function(d) { return d.date; }), d3.min(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet maxX = Math.max(d3.max(timeseriesData, function(d) { return d.date; }), d3.max(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet minY = d3.min(timeseriesData, function(d) { return d.value; });\n\t\tlet maxY = d3.max(timeseriesData, function(d) { return d.value; });\n\n\t\t// Build X & Y scale.\n\t\tconst xScale = d3.scaleTime()\n\t\t\t.domain([minX, maxX])\n\t\t\t.range([marginLeft, width - marginRight]);\n\n\t\tconst yScale = d3.scaleLinear()\n\t\t\t.domain([minY, maxY])\n\t\t\t.range([height - marginBottom, marginTop]);\n\n\t\treturn (\n\t\t\t<svg style={{height:`${height}px`, width:`${width}px`}}>\n\t\t\t\t<LineChart\n\t\t\t\t\txScale={xScale}\n\t\t\t\t\tyScale={yScale}\n\t\t\t\t\tdata={timeseriesData}\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\n\n\nfunction LineChart(props) {\n\t// Get props.\n\tconst { xScale, yScale, data } = props;\n\n\t// Build line function.\n\tvar line = d3.line()\n\t\t.x(function(d) { return xScale(d.date); })\n\t\t.y(function(d) { return yScale(d.value); });\n\n\tvar linePlot = line(data);\n\n\t// Plot.\n\treturn (\n\t\t<path \n\t\t\tclassName=\"line\" \n\t\t\td={linePlot} \n\t\t\tstyle={{fill:'none', strokeWidth:'1.5px', stroke:props.stroke}}\n\t\t/>\n\t);\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}