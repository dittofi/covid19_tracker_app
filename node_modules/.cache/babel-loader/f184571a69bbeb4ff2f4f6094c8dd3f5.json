{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Axis from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uuid = `_${uuidv1()}`;\n  }\n\n  componentDidUpdate() {\n    document.querySelectorAll(\".textpoint\").forEach(elem => {\n      console.log(elem);\n    });\n  }\n\n  render() {\n    const {\n      timeseriesData,\n      measuresData,\n      height,\n      width\n    } = this.props; // Margins.\n\n    const marginTop = 10;\n    const marginRight = 25;\n    const marginBottom = 25;\n    const marginLeft = 50; // Find min & max values.\n\n    let minX = Math.min(d3.min(timeseriesData, function (d) {\n      return d.date;\n    }), d3.min(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let maxX = Math.max(d3.max(timeseriesData, function (d) {\n      return d.date;\n    }), d3.max(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let minY = d3.min(timeseriesData, function (d) {\n      return d.value;\n    });\n    let maxY = d3.max(timeseriesData, function (d) {\n      return d.value;\n    }); // Build X & Y scale.\n\n    const xScale = d3.scaleTime().domain([minX, maxX]).range([marginLeft, width - marginRight]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([height - marginBottom, marginTop]); // Set grid & axis props.\n\n    const xProps = {\n      orient: 'Bottom',\n      scale: xScale,\n      translate: `translate(0, ${height - marginBottom})`,\n      tickSize: height - marginTop - marginBottom\n    };\n    const yProps = {\n      orient: 'Left',\n      scale: yScale,\n      translate: `translate(${marginLeft}, 0)`,\n      tickSize: width - marginLeft - marginRight\n    };\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        height: `${height}px`,\n        width: `${width}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: this.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: marginLeft,\n      y: marginTop,\n      width: width - marginLeft - marginRight,\n      height: height - marginTop - marginBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      clipPath: `url(#${this.uuid})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      xScale: xScale,\n      yScale: yScale,\n      data: timeseriesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ImageChart, {\n      xScale: xScale,\n      yScale: yScale,\n      data: measuresData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nclass Grid extends React.Component {\n  componentDidMount() {\n    this.renderGrid();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.renderGrid();\n  }\n\n  renderGrid() {\n    const axisElement = d3Select(this.axisElement); // Render the axis.\n\n    const axisType = `axis${this.props.orient}`;\n    const axis = d3Axis[axisType]().scale(this.props.scale).tickSize(-this.props.tickSize).tickFormat(\"\");\n    axisElement.call(axis); // Color the axis.\n\n    axisElement.selectAll('line').style('stroke', this.props.color);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: `Grid Grid-${this.props.orient}`,\n      ref: el => {\n        this.axisElement = el;\n      },\n      transform: this.props.translate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nclass Axis extends React.Component {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.renderAxis();\n  }\n\n  renderAxis() {\n    const axisElement = d3Select(this.axisElement); // Render the axis.\n\n    const axisType = `axis${this.props.orient}`;\n    const axis = d3Axis[axisType]().scale(this.props.scale);\n    axisElement.call(axis); // Color the axis.\n\n    axisElement.selectAll('line').attr('stroke', this.props.color).selectAll('path').attr('stroke', this.props.color).selectAll('text').attr('fill', this.props.color);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: `Axis Axis-${this.props.orient}`,\n      ref: el => {\n        this.axisElement = el;\n      },\n      transform: this.props.translate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nfunction LineChart(props) {\n  // Get props.\n  const {\n    xScale,\n    yScale,\n    data\n  } = props; // Build line function.\n\n  var line = d3.line().x(function (d) {\n    return xScale(d.date);\n  }).y(function (d) {\n    return yScale(d.value);\n  });\n  var linePlot = line(data); // Plot.\n\n  return /*#__PURE__*/React.createElement(\"path\", {\n    className: \"line\",\n    d: linePlot,\n    style: {\n      fill: 'none',\n      strokeWidth: '1.5px',\n      stroke: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }\n  });\n}\n\nclass ImageChart extends React.Component {\n  componentDidMount() {\n    this.renderPlot();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.renderPlot();\n  }\n\n  renderPlot() {\n    // Get props.\n    const xScale = this.props.xScale;\n    const height = this.props.height;\n    const data = this.props.data; // Bind to dom.\n\n    const imageElements = d3Select(this.imageElement).selectAll(\"text\").data(data, d => d[xAccessor]);\n    imageElements.join(enter => enter.append(\"text\").on('click', (d, i) => this.props.onClick(d, i, this.props.index)).attr('font-family', 'FontAwesome').text(function (d) {\n      return '\\uf071';\n    }).attr('font-size', '16px').attr('fill', 'red').attr(\"transform\", function (d) {\n      return \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n    }), update => update.attr(\"transform\", function (d) {\n      return \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n    }), exit => exit.remove());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: \"image\",\n      ref: el => {\n        this.imageElement = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart.js"],"names":["React","d3","d3Axis","select","d3Select","uuidv1","Chart","Component","constructor","props","uuid","componentDidUpdate","document","querySelectorAll","forEach","elem","console","log","render","timeseriesData","measuresData","height","width","marginTop","marginRight","marginBottom","marginLeft","minX","Math","min","d","date","date_implemented","maxX","max","minY","value","maxY","xScale","scaleTime","domain","range","yScale","scaleLinear","xProps","orient","scale","translate","tickSize","yProps","Grid","componentDidMount","renderGrid","prevProps","prevState","axisElement","axisType","axis","tickFormat","call","selectAll","style","color","el","Axis","renderAxis","attr","LineChart","data","line","x","y","linePlot","fill","strokeWidth","stroke","ImageChart","renderPlot","imageElements","imageElement","xAccessor","join","enter","append","on","i","onClick","index","text","update","exit","remove"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Axis from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\n\nclass Chart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = `_${uuidv1()}`;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tdocument.querySelectorAll(\".textpoint\").forEach((elem) => {\n\t\t\tconsole.log(elem);\n\t\t\t\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { timeseriesData, measuresData, height, width } = this.props;\n\t\t\n\t\t// Margins.\n\t\tconst marginTop = 10;\n\t\tconst marginRight = 25; \n\t\tconst marginBottom = 25; \n\t\tconst marginLeft = 50;\n\n\t\t// Find min & max values.\n\t\tlet minX = Math.min(d3.min(timeseriesData, function(d) { return d.date; }), d3.min(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet maxX = Math.max(d3.max(timeseriesData, function(d) { return d.date; }), d3.max(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet minY = d3.min(timeseriesData, function(d) { return d.value; });\n\t\tlet maxY = d3.max(timeseriesData, function(d) { return d.value; });\n\n\t\t// Build X & Y scale.\n\t\tconst xScale = d3.scaleTime()\n\t\t\t.domain([minX, maxX])\n\t\t\t.range([marginLeft, width - marginRight]);\n\n\t\tconst yScale = d3.scaleLinear()\n\t\t\t.domain([minY, maxY])\n\t\t\t.range([height - marginBottom, marginTop]);\n\n\t\t// Set grid & axis props.\n\t\tconst xProps = {\n\t\t\torient: 'Bottom',\n\t\t\tscale: xScale,\n\t\t\ttranslate: `translate(0, ${height - marginBottom})`,\n\t\t\ttickSize: height - marginTop - marginBottom,\n\t\t}\n\n\t\tconst yProps = {\n\t\t\torient: 'Left',\n\t\t\tscale: yScale,\n\t\t\ttranslate: `translate(${marginLeft}, 0)`,\n\t\t\ttickSize: width - marginLeft - marginRight,\n\t\t}\n\n\t\treturn (\n\t\t\t<svg style={{height:`${height}px`, width:`${width}px`}}>\n\t\t\t\t<defs>\n\t\t            <clipPath id={this.uuid}>\n\t\t                <rect x={marginLeft} y={marginTop} width={width - marginLeft - marginRight} height={height - marginTop - marginBottom}/>\n\t\t            </clipPath>\n\t\t        </defs>\n\t        \t<Grid {...yProps} color={\"#ddd\"} />\n\t\t\t\t<Grid {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...yProps} color={\"#ddd\"} />\n\t\t\t\t<g clipPath={`url(#${this.uuid})`}>\n\t\t\t\t\t<LineChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\tdata={timeseriesData}\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\tdata={measuresData}\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nclass Grid extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.renderGrid();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.renderGrid();\n\t}\n\n\trenderGrid() {\n\t\tconst axisElement = d3Select(this.axisElement);\n\n\t\t// Render the axis.\n\t\tconst axisType = `axis${this.props.orient}`\n\t\tconst axis = d3Axis[axisType]()\n\t\t\t.scale(this.props.scale)\n\t\t\t.tickSize(-this.props.tickSize)\n\t\t\t.tickFormat(\"\");\n\n\t\taxisElement.call(axis);\n\n\t\t// Color the axis.\n\t\taxisElement.selectAll('line').style('stroke', this.props.color);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<g\n\t\t\t\tclassName={`Grid Grid-${this.props.orient}`}\n\t\t\t\tref={(el) => { this.axisElement = el; }}\n\t\t\t\ttransform={this.props.translate}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nclass Axis extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.renderAxis();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.renderAxis();\n\t}\n\n\trenderAxis() {\n\t\tconst axisElement = d3Select(this.axisElement);\n\t\t\n\t\t// Render the axis.\n\t\tconst axisType = `axis${this.props.orient}`\n\t\tconst axis = d3Axis[axisType]()\n\t\t\t.scale(this.props.scale);\n\n\t\taxisElement.call(axis);\n\n\t\t// Color the axis.\n\t\taxisElement\n\t\t\t.selectAll('line').attr('stroke', this.props.color)\n\t\t\t.selectAll('path').attr('stroke', this.props.color)\n\t\t\t.selectAll('text').attr('fill', this.props.color);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<g\n\t\t\t\tclassName={`Axis Axis-${this.props.orient}`}\n\t\t\t\tref={(el) => { this.axisElement = el; }}\n\t\t\t\ttransform={this.props.translate}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction LineChart(props) {\n\t// Get props.\n\tconst { xScale, yScale, data } = props;\n\n\t// Build line function.\n\tvar line = d3.line()\n\t\t.x(function(d) { return xScale(d.date); })\n\t\t.y(function(d) { return yScale(d.value); });\n\n\tvar linePlot = line(data);\n\n\t// Plot.\n\treturn (\n\t\t<path \n\t\t\tclassName=\"line\" \n\t\t\td={linePlot} \n\t\t\tstyle={{fill:'none', strokeWidth:'1.5px', stroke:\"red\"}}\n\t\t/>\n\t);\n}\n\nclass ImageChart extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.renderPlot();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.renderPlot();\n\t}\n\n\trenderPlot() {\n\t\t// Get props.\n\t\tconst xScale = this.props.xScale;\n\t\tconst height = this.props.height;\n\t\tconst data = this.props.data;\n\n\t\t// Bind to dom.\n\t\tconst imageElements = d3Select(this.imageElement)\n\t\t\t.selectAll(\"text\")\n\t\t\t.data(data, d => d[xAccessor]);\n\n\t\timageElements.join(\n\t\t\tenter =>\n\t\t\t\tenter\n\t\t\t\t\t.append(\"text\")\n\t\t\t\t\t.on('click', (d, i) => this.props.onClick(d, i, this.props.index))\n\t\t\t\t\t.attr('font-family', 'FontAwesome')\n\t\t\t\t\t.text( function (d) { return '\\uf071'; })\n\t\t\t\t\t.attr('font-size', '16px')\n\t\t\t\t\t.attr('fill', 'red')\n\t\t\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\t\t\treturn \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n\t\t\t\t\t}),\n\t\t\tupdate =>\n\t\t\t\tupdate\n\t\t\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\t\t\treturn \"translate(\" + xScale(d.date_implemented) + \",\" + (height - 50) + \")\";\n\t\t\t\t\t}),\n\t\t\texit => \n\t\t\t\texit\n\t\t\t\t\t.remove()\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<g\n\t\t\t\tclassName='image'\n\t\t\t\tref={(el) => { this.imageElement = el; }}\n\t\t\t/>\n\t\t);\t\t\n\t}\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}