{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart/chart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\nimport Axis from './axis.js';\nimport Grid from './grid.js';\nimport LineChart from './line.js';\nimport ImageChart from './image.js';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uuid = `_${uuidv1()}`;\n    this.zoom = d3.zoom().on(\"zoom\", this.zoomFunction.bind(this));\n  }\n\n  render() {\n    const {\n      timeseriesData,\n      measuresData,\n      height,\n      width,\n      onClick\n    } = this.props; // Margins.\n\n    const marginTop = 10;\n    const marginRight = 25;\n    const marginBottom = 25;\n    const marginLeft = 50; // Find min & max values.\n\n    let minX = Math.min(d3.min(timeseriesData, function (d) {\n      return d.date;\n    }), d3.min(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let maxX = Math.max(d3.max(timeseriesData, function (d) {\n      return d.date;\n    }), d3.max(measuresData, function (d) {\n      return d.date_implemented;\n    }));\n    let minY = d3.min(timeseriesData, function (d) {\n      return d.value;\n    });\n    let maxY = d3.max(timeseriesData, function (d) {\n      return d.value;\n    });\n\n    if (!minX) {\n      minX = new Date(2020, 1, 1);\n    }\n\n    if (!maxX) {\n      maxX = new Date();\n    }\n\n    if (!minY) {\n      minY = 0;\n    }\n\n    if (!maxY) {\n      maxY = 1;\n    } // Build X & Y scale.\n\n\n    const xScale = d3.scaleTime().domain([minX, maxX]).range([marginLeft, width - marginRight]);\n    const yScale = d3.scaleLinear().domain([minY, maxY]).range([height - marginBottom, marginTop]); // Set grid & axis props.\n\n    const xProps = {\n      orient: 'Bottom',\n      scale: xScale,\n      translate: `translate(0, ${height - marginBottom})`,\n      tickSize: height - marginTop - marginBottom\n    };\n    const yProps = {\n      orient: 'Left',\n      scale: yScale,\n      translate: `translate(${marginLeft}, 0)`,\n      tickSize: width - marginLeft - marginRight\n    };\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        height: `${height}px`,\n        width: `${width}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: this.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: marginLeft,\n      y: marginTop,\n      width: width - marginLeft - marginRight,\n      height: height - marginTop - marginBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, xProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Axis, Object.assign({}, yProps, {\n      color: \"#ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      clipPath: `url(#${this.uuid})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      xScale: xScale,\n      yScale: yScale,\n      data: timeseriesData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ImageChart, {\n      xScale: xScale,\n      data: measuresData,\n      height: height,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/chart/chart.js"],"names":["React","d3","select","d3Select","uuidv1","Axis","Grid","LineChart","ImageChart","Chart","Component","constructor","props","uuid","zoom","on","zoomFunction","bind","render","timeseriesData","measuresData","height","width","onClick","marginTop","marginRight","marginBottom","marginLeft","minX","Math","min","d","date","date_implemented","maxX","max","minY","value","maxY","Date","xScale","scaleTime","domain","range","yScale","scaleLinear","xProps","orient","scale","translate","tickSize","yProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport { select as d3Select } from 'd3-selection';\nimport uuidv1 from \"uuid\";\n\nimport Axis from './axis.js';\nimport Grid from './grid.js';\nimport LineChart from './line.js';\nimport ImageChart from './image.js';\n\nclass Chart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.uuid = `_${uuidv1()}`;\n\n\t\tthis.zoom = d3.zoom().on(\"zoom\", this.zoomFunction.bind(this));\n\t}\n\n\trender() {\n\t\tconst { timeseriesData, measuresData, height, width, onClick } = this.props;\n\t\t\n\t\t// Margins.\n\t\tconst marginTop = 10;\n\t\tconst marginRight = 25; \n\t\tconst marginBottom = 25; \n\t\tconst marginLeft = 50;\n\n\t\t// Find min & max values.\n\t\tlet minX = Math.min(d3.min(timeseriesData, function(d) { return d.date; }), d3.min(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet maxX = Math.max(d3.max(timeseriesData, function(d) { return d.date; }), d3.max(measuresData, function(d) { return d.date_implemented; }))\n\t\tlet minY = d3.min(timeseriesData, function(d) { return d.value; });\n\t\tlet maxY = d3.max(timeseriesData, function(d) { return d.value; });\n\n\t\tif(!minX) { minX = new Date(2020, 1, 1); }\n\t\tif(!maxX) { maxX = new Date(); }\n\t\tif(!minY) { minY = 0 }\n\t\tif(!maxY) { maxY = 1 }\n\n\t\t// Build X & Y scale.\n\t\tconst xScale = d3.scaleTime()\n\t\t\t.domain([minX, maxX])\n\t\t\t.range([marginLeft, width - marginRight]);\n\n\t\tconst yScale = d3.scaleLinear()\n\t\t\t.domain([minY, maxY])\n\t\t\t.range([height - marginBottom, marginTop]);\n\n\t\t// Set grid & axis props.\n\t\tconst xProps = {\n\t\t\torient: 'Bottom',\n\t\t\tscale: xScale,\n\t\t\ttranslate: `translate(0, ${height - marginBottom})`,\n\t\t\ttickSize: height - marginTop - marginBottom,\n\t\t}\n\n\t\tconst yProps = {\n\t\t\torient: 'Left',\n\t\t\tscale: yScale,\n\t\t\ttranslate: `translate(${marginLeft}, 0)`,\n\t\t\ttickSize: width - marginLeft - marginRight,\n\t\t}\n\n\t\treturn (\n\t\t\t<svg style={{height:`${height}px`, width:`${width}px`}}>\n\t\t\t\t<defs>\n\t\t            <clipPath id={this.uuid}>\n\t\t                <rect x={marginLeft} y={marginTop} width={width - marginLeft - marginRight} height={height - marginTop - marginBottom}/>\n\t\t            </clipPath>\n\t\t        </defs>\n\t        \t<Grid {...yProps} color={\"#ddd\"} />\n\t\t\t\t<Grid {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...xProps} color={\"#ddd\"} />\n\t\t\t\t<Axis {...yProps} color={\"#ddd\"} />\n\t\t\t\t<g clipPath={`url(#${this.uuid})`}>\n\t\t\t\t\t<LineChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\tdata={timeseriesData}\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageChart\n\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\tdata={measuresData}\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}