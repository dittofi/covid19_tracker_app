{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/App.js\";\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { countries } from './countries.js';\nimport Metrics from './metrics.js';\nimport { getTimeseriesData } from './rest_api.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: \"US\",\n      metric: \"confirmed\",\n      startDate: null,\n      endDate: null\n    };\n    this.onPlot = this.onPlot.bind(this);\n  }\n\n  async onPlot() {\n    const {\n      country,\n      metric,\n      startDate,\n      endDate\n    } = this.state;\n    let data = await getTimeseriesData(country);\n    console.log(data);\n  }\n\n  render() {\n    const {\n      country,\n      metric,\n      startDate,\n      endDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column\",\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-grow-1 d-flex p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card flex-grow-1 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      country: country,\n      metric: metric,\n      startDate: startDate,\n      endDate: endDate,\n      onCountryChange: e => this.setState({\n        country: e.target.value\n      }),\n      onMetricChange: e => this.setState({\n        metric: e.target.value\n      }),\n      onStartDateChange: val => this.setState({\n        startDate: val\n      }),\n      onEndDateChange: val => this.setState({\n        endDate: val\n      }),\n      onPlot: this.onPlot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Graph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Basic card\"))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nfunction Form(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, \"Compare:\"), /*#__PURE__*/React.createElement(Countries, {\n    country: props.country,\n    onCountryChange: props.onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }, \"VS\"), /*#__PURE__*/React.createElement(Metrics, {\n    metric: props.metric,\n    onMetricChange: props.onMetricChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    name: \"startDate\",\n    onChange: props.onStartDateChange,\n    selected: props.startDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(DatePicker, {\n    name: \"endDate\",\n    onChange: props.onEndDateChange,\n    selected: props.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: e => {\n      e.preventDefault();\n      props.onPlot();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n}\n\nfunction Graph(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/App.js"],"names":["React","DatePicker","countries","Metrics","getTimeseriesData","App","Component","constructor","props","state","country","metric","startDate","endDate","onPlot","bind","data","console","log","render","height","width","e","setState","target","value","val","Form","onCountryChange","onMetricChange","onStartDateChange","onEndDateChange","preventDefault","Graph"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { countries } from './countries.js';\n\nimport Metrics from './metrics.js';\n\nimport { getTimeseriesData } from './rest_api.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcountry: \"US\",\n\t\t\tmetric: \"confirmed\",\n\t\t\tstartDate: null,\n\t\t\tendDate: null,\n\t\t}\n\n\t\tthis.onPlot = this.onPlot.bind(this);\n\t}\n\n\tasync onPlot() {\n\t\tconst { country, metric, startDate, endDate } = this.state;\n\n\t\tlet data = await getTimeseriesData(country);\n\t\tconsole.log(data);\n\t}\n\n\trender() {\n\t\tconst { country, metric, startDate, endDate } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"d-flex flex-column\" style={{height:\"100vh\", width:\"100vw\"}}>\n\t\t\t\t<header>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"flex-grow-1 d-flex p-3\">\n\t\t\t\t\t<div className=\"card flex-grow-1 mr-3\">\n\t\t\t\t\t\t<div className=\"card-body d-flex flex-column\">\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tcountry={country}\n\t\t\t\t\t\t\t\tmetric={metric}\n\t\t\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\t\t\tendDate={endDate}\n\n\t\t\t\t\t\t\t\tonCountryChange={(e) => this.setState({country:e.target.value})}\n\t\t\t\t\t\t\t\tonMetricChange={(e) => this.setState({metric:e.target.value})}\n\t\t\t\t\t\t\t\tonStartDateChange={(val) => this.setState({startDate:val})}\n\t\t\t\t\t\t\t\tonEndDateChange={(val) => this.setState({endDate:val})}\n\n\t\t\t\t\t\t\t\tonPlot={this.onPlot}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"card-body\">Basic card</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<footer>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction Form (props) {\n\treturn (\n\t\t<form className=\"form-inline\">\n\t\t\t<label>Compare:</label>\n\t\t\t<Countries \n\t\t\t\tcountry={props.country}\n\t\t\t\tonCountryChange={props.onCountryChange}\n\t\t\t/>\n\t\t\t<label>VS</label>\n\t\t\t<Metrics\n\t\t\t\tmetric={props.metric}\n\t\t\t\tonMetricChange={props.onMetricChange}\n\t\t\t/>\n\t\t\t<DatePicker\n\t\t\t\tname=\"startDate\"\n\t\t\t\tonChange={props.onStartDateChange}\n\t\t\t\tselected={props.startDate}\n\t\t\t/>\n\t\t\t<label>-</label>\n\t\t\t<DatePicker\n\t\t\t\tname=\"endDate\"\n\t\t\t\tonChange={props.onEndDateChange}\n\t\t\t\tselected={props.endDate}\n\t\t\t/>\n\t\t\t<button \n\t\t\t\tclassName=\"btn\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tprops.onPlot();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nfunction Graph (props) {\n\treturn (\n\t\t<div className=\"flex-grow-1\">\n\t\t</div>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}