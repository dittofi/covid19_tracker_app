{"ast":null,"code":"var _jsxFileName = \"/Users/samuelvirgo/Documents/development/ditto/covid_19/src/App.js\";\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { countries } from './countries.js';\nimport Metrics from './metrics.js';\nimport { getTimeseriesData } from './rest_api.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: \"US\",\n      metric: \"confirmed\",\n      startDate: new Date(),\n      endDate: new Date(),\n      metricData: []\n    };\n    this.onPlot = this.onPlot.bind(this);\n  }\n\n  async onPlot() {\n    const {\n      country,\n      metric,\n      startDate,\n      endDate\n    } = this.state; // Get data.\n\n    let data = await getTimeseriesData(country);\n\n    if (data && data.length > 0) {\n      data = data[0] && data[0].timeseries ? data[0].timeseries : [];\n      console.log(data);\n    } // Format dates.\n    // Apply date range filter.\n\n    /*data = data.filter((value) => {\n    \t})*/\n\n\n    this.setState({\n      metricData: data\n    });\n  }\n\n  render() {\n    const {\n      country,\n      metric,\n      startDate,\n      endDate,\n      metricData\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column\",\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-grow-1 d-flex p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card flex-grow-1 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      country: country,\n      metric: metric,\n      startDate: startDate,\n      endDate: endDate,\n      onCountryChange: e => this.setState({\n        country: e.target.value\n      }),\n      onMetricChange: e => this.setState({\n        metric: e.target.value\n      }),\n      onStartDateChange: val => this.setState({\n        startDate: val\n      }),\n      onEndDateChange: val => this.setState({\n        endDate: val\n      }),\n      onPlot: this.onPlot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Graph, {\n      metric: metric,\n      data: metricData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"Basic card\"))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nfunction Form(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, \"Compare:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: props.country,\n    onChange: props.onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, countries.map((country, i) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: country.Code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, country.Name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }, \"VS\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: props.onMetricChange,\n    value: props.metric,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"confirmed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"Total confirmed cases\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, \"Total recovered\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, \"Total dead\")), /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: props.onStartDateChange,\n    selected: props.startDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: props.onEndDateChange,\n    selected: props.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: e => {\n      e.preventDefault();\n      props.onPlot();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n}\n\nfunction Graph(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samuelvirgo/Documents/development/ditto/covid_19/src/App.js"],"names":["React","DatePicker","countries","Metrics","getTimeseriesData","App","Component","constructor","props","state","country","metric","startDate","Date","endDate","metricData","onPlot","bind","data","length","timeseries","console","log","setState","render","height","width","e","target","value","val","Form","onCountryChange","map","i","Code","Name","onMetricChange","onStartDateChange","onEndDateChange","preventDefault","Graph"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { countries } from './countries.js';\n\nimport Metrics from './metrics.js';\n\nimport { getTimeseriesData } from './rest_api.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcountry: \"US\",\n\t\t\tmetric: \"confirmed\",\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\n\t\t\tmetricData:[],\n\t\t}\n\n\t\tthis.onPlot = this.onPlot.bind(this);\n\t}\n\n\tasync onPlot() {\n\t\tconst { country, metric, startDate, endDate } = this.state;\n\t\t\n\t\t// Get data.\n\t\tlet data = await getTimeseriesData(country);\n\t\tif(data && data.length > 0) {\n\t\t\tdata = data[0] && data[0].timeseries ? data[0].timeseries : [];\n\t\t\tconsole.log(data);\n\t\t}\n\n\t\t\n\t\t\n\n\t\t// Format dates.\n\t\t\n\t\t// Apply date range filter.\n\t\t/*data = data.filter((value) => {\n\n\t\t})*/\n\n\n\n\t\tthis.setState({metricData: data})\n\t}\n\n\trender() {\n\t\tconst { country, metric, startDate, endDate, metricData } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"d-flex flex-column\" style={{height:\"100vh\", width:\"100vw\"}}>\n\t\t\t\t<header>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"flex-grow-1 d-flex p-3\">\n\t\t\t\t\t<div className=\"card flex-grow-1 mr-3\">\n\t\t\t\t\t\t<div className=\"card-body d-flex flex-column\">\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tcountry={country}\n\t\t\t\t\t\t\t\tmetric={metric}\n\t\t\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\t\t\tendDate={endDate}\n\n\t\t\t\t\t\t\t\tonCountryChange={(e) => this.setState({country:e.target.value})}\n\t\t\t\t\t\t\t\tonMetricChange={(e) => this.setState({metric:e.target.value})}\n\t\t\t\t\t\t\t\tonStartDateChange={(val) => this.setState({startDate:val})}\n\t\t\t\t\t\t\t\tonEndDateChange={(val) => this.setState({endDate:val})}\n\n\t\t\t\t\t\t\t\tonPlot={this.onPlot}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\tmetric={metric}\n\t\t\t\t\t\t\t\tdata={metricData}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"card-body\">Basic card</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<footer>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction Form (props) {\n\treturn (\n\t\t<form className=\"form-inline\">\n\t\t\t<label>Compare:</label>\n\t\t\t<select\n\t\t\t\tclassName=\"form-control\" \n\t\t\t\tvalue={props.country}\n\t\t\t\tonChange={props.onCountryChange}\n\t\t\t>\n\t\t\t{countries.map((country, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<option key={i} value={country.Code}>{country.Name}</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t</select>\n\t\t\t<label>VS</label>\n\t\t\t<select\n\t\t\t\tclassName=\"form-control\" \n\t\t\t\tonChange={props.onMetricChange}\n\t\t\t\tvalue={props.metric}\n\t\t\t>\n\t\t\t\t<option value=\"confirmed\">Total confirmed cases</option>\n\t\t\t\t<option value=\"recovered\">Total recovered</option>\n\t\t\t\t<option value=\"dead\">Total dead</option>\n\t\t\t</select>\n\t\t\t<DatePicker\n\t\t\t\tonChange={props.onStartDateChange}\n\t\t\t\tselected={props.startDate}\n\t\t\t/>\n\t\t\t<label>-</label>\n\t\t\t<DatePicker\n\t\t\t\tonChange={props.onEndDateChange}\n\t\t\t\tselected={props.endDate}\n\t\t\t/>\n\t\t\t<button \n\t\t\t\tclassName=\"btn\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tprops.onPlot();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nfunction Graph (props) {\n\treturn (\n\t\t<div className=\"flex-grow-1\">\n\t\t</div>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}